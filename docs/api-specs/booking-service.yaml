openapi: 3.0.0
info:
  title: Booking Service API
  version: 1.0.0
  description: API documentation for Booking Service

servers:
  - url: http://localhost:8083
    description: Local development server

paths:
  /api/bookings:
    get:
      summary: Get all bookings
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
    
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreate'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /api/bookings/{id}:
    get:
      summary: Get booking by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
    

  /api/bookings/user/{userId}:
    get:
      summary: Get bookings by user ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of user's bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        movieId:
          type: string
        showtimeId:
          type: string
        seats:
          type: array
          items:
            type: string
        totalAmount:
          type: number
          format: float
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED]
        paymentId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    BookingCreate:
      type: object
      required:
        - userId
        - movieId
        - showtimeId
        - seats
      properties:
        userId:
          type: string
        movieId:
          type: string
        showtimeId:
          type: string
        seats:
          type: array
          items:
            type: string
    
    BookingUpdate:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED]
        paymentId:
          type: string 